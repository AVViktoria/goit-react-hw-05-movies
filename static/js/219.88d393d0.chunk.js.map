{"version":3,"file":"static/js/219.88d393d0.chunk.js","mappings":"oQAEaA,EAAMC,EAAAA,GAAAA,IAAH,yYAcHC,EAAOD,EAAAA,GAAAA,GAAH,wLASJE,EAAQF,EAAAA,GAAAA,GAAH,ydAoBLG,EAAYH,EAAAA,GAAAA,IAAH,0C,SCAtB,EAvCa,WACX,OAAkCI,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUH,GACPI,KAAKL,GACLM,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACN,KAMF,SAACJ,EAAD,WACE,SAACF,EAAD,UACGI,EAAUW,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KAClC,OACE,0BACGD,GACC,SAACnB,EAAD,CACEqB,IAAG,yCAAoCF,GACvCG,IAAKF,EACLG,MAAM,MACNC,OAAO,SAGT,SAACxB,EAAD,CAAKqB,IAAKI,EAAUH,IAAKF,EAAMG,MAAM,MAAMC,OAAO,SAEpD,SAACrB,EAAD,UAAQiB,MAXDF,EAcZ,OAIR,C,mMC1CKQ,EAAU,2CACVC,EAAW,+BAEJC,EAAgB,mCAAG,oGACZC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,+BAA4CD,IADhC,cACxBI,EADwB,yBAEvBA,EAAIC,MAFmB,2CAAH,qDAMhBC,EAAe,mCAAG,WAAMd,GAAN,uFACXW,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BT,EAA/B,YAAqCQ,IAD1B,cACvBI,EADuB,yBAEtBA,EAAIC,MAFkB,2CAAH,sDAMfE,EAAgB,mCAAG,WAAMC,GAAN,uFACZL,EAAAA,GAAAA,IAAA,UACbF,EADa,yBACYD,EADZ,kBAC6BQ,EAD7B,+CADY,cACxBJ,EADwB,yBAIvBA,EAAIC,KAAKI,SAJc,2CAAH,sDAOhBxB,EAAS,mCAAG,WAAMH,GAAN,uFACLqB,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKnB,EADL,oBACwBkB,EADxB,oBADK,cACjBI,EADiB,yBAKhBA,EAAIC,KAAKK,MALO,2CAAH,sDAQTC,EAAU,mCAAG,WAAM7B,GAAN,uFACNqB,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKnB,EADL,oBACwBkB,EADxB,2BADM,cAClBI,EADkB,yBAIjBA,EAAIC,KAAKI,SAJQ,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 7px 8px -5px rgba(0, 0, 0, 0.2),\n      0px 8px 9px 0px rgba(0, 0, 0, 0.14), 0px 5px 15px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  justify-content: center;\n\n  align-content: center;\n  align-items: stretch;\n  grid-gap: 20px;\n`;\nexport const Title = styled.h2`\n  padding: 10px;\n  font-size: 18px;\n  line-height: 1.56;\n  color: #182446f2;\n\n  text-align: center;\n  justify-content: center;\n  align-content: center;\n  vertical-align: middle;\n  width: 150px;\n  height: 50px;\n  background-color: rgb(170 161 140 / 24%);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    color: #ad3737;\n  }\n`;\nexport const Container = styled.div`\n  padding: 30px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getActors } from 'services/Api/Api';\nimport noPoster from 'images/Posters/noPhoto.jpeg';\nimport { Container, Img, List, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getActors(movieId)\n      .then(setMovieCast)\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [movieId]);\n\n  // if (!cast) {\n  //   return alert('NO CAST');\n  // }\n  return (\n    <Container>\n      <List>\n        {movieCast.map(({ id, profile_path, name }) => {\n          return (\n            <li key={id}>\n              {profile_path ? (\n                <Img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  width=\"170\"\n                  height=\"240\"\n                />\n              ) : (\n                <Img src={noPoster} alt={name} width=\"170\" height=\"240\" />\n              )}\n              <Title>{name}</Title>\n            </li>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=31142dc0aeacf38ab901f6c28fe4e845';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovie = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getDetailsMovie = async id => {\n  const res = await axios.get(`${BASE_URL}/movie/${id}?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.cast);\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n  // console.log(res.data.results);\n};\n"],"names":["Img","styled","List","Title","Container","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getActors","then","catch","message","console","log","map","id","profile_path","name","src","alt","width","height","noPoster","API_KEY","BASE_URL","getTrendingMovie","axios","res","data","getDetailsMovie","getMoviesByQuery","query","results","cast","getReviews"],"sourceRoot":""}