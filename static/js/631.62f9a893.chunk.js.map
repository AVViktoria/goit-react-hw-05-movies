{"version":3,"file":"static/js/631.62f9a893.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n   {\n    border-radius: 10px;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 7px 8px -5px rgba(0, 0, 0, 0.2),\n        0px 8px 9px 0px rgba(0, 0, 0, 0.14),\n        0px 5px 15px 0px rgba(0, 0, 0, 0.12);\n    }\n  }\n`;\n// align-items: center;\n//     justify-content: center;\nexport const InfCover = styled.div`\n   {\n    width: 400px;\n  }\n`;\nexport const CardCover = styled.div`\n   {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n  }\n`;\nexport const Cover = styled.div`\n   {\n    padding-top: 25px;\n  }\n`;\nexport const Button = styled.button`\n   {\n     {\n      cursor: pointer;\n      display: inline-block;\n      color: #fff;\n      font-size: 16px;\n      text-transform: uppercase;\n      padding: 11px 20px;\n      border: none;\n      margin-left: -1px;\n      background-color: #c0392b;\n      float: left; /* IE 9 Fix */\n      @include transition(all 0.2s ease-in);\n      &:hover {\n        background-color: #6e0e0e;\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h2``;\nexport const Item = styled.div`\n   {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ButCover = styled.div`\n   {\n\n        display: flex;\n    align-items: flex-start;\n    justify-content: center;\n     \n      margin-bottom: 25px;\n}\n  }\n`;\n\nexport const LinkName = styled.div`\n   {\n    cursor: pointer;\n    display: inline-block;\n    color: #fff;\n    font-size: 16px;\n    text-transform: uppercase;\n    padding: 11px 20px;\n    border: none;\n    margin-left: -1px;\n    background-color: #c0392b;\n    float: left; /* IE 9 Fix */\n    @include transition(all 0.2s ease-in);\n    &:hover {\n      background-color: #6e0e0e;\n    }\n    &:first-child {\n      margin-left: 20px;\n    }\n  }\n`;\n\nexport const LinkCover = styled.div`\n   {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    margin-top: 25px;\n    margin-bottom: 25px;\n  }\n`;\n\n// export const List = styled.ul`\n//    {\n//   }\n// `;\n","import { getDetailsMovie } from 'services/Api/Api';\nimport { useState, useEffect } from 'react';\n\nimport {\n  CardCover,\n  Cover,\n  Button,\n  Img,\n  InfCover,\n  Title,\n  Item,\n  ButCover,\n  LinkCover,\n  LinkName,\n} from './MovieDetails.styled';\nimport {\n  useNavigate,\n  useParams,\n  Outlet,\n  useLocation,\n  Link,\n} from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  //  console.log(location);\n  // console.log(movieId);\n\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  useEffect(() => {\n    getDetailsMovie(movieId)\n      .then(setMovieDetails)\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [movieId]);\n  if (!movieDetails) {\n    return <p>Sorry, doesn't have details</p>;\n  }\n  const { title, poster_path, vote_average, release_date, overview, genres } =\n    movieDetails;\n  return (\n    <Cover>\n      <ButCover>\n        <Button type=\"button\" onClick={handleGoBack}>\n          Go Back\n        </Button>\n      </ButCover>\n\n      <CardCover>\n        <Img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width=\"300\"\n          height=\"400\"\n        />\n        <InfCover>\n          <Item>\n            <Title>{title}</Title>\n          </Item>\n\n          <Item>\n            <h3>About: </h3>\n            <p>{overview}</p>\n          </Item>\n\n          <Item>\n            <h3>Release Date: </h3>\n            <p>{release_date}</p>\n          </Item>\n\n          <Item>\n            <h3>Score: </h3>\n            <p>{vote_average.toFixed(1)}</p>\n          </Item>\n\n          <Item>\n            <h3>Genres</h3>\n            <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n          </Item>\n        </InfCover>\n      </CardCover>\n      <LinkCover>\n        <Link to=\"cast\" state={location.state}>\n          <LinkName>Cast</LinkName>\n        </Link>\n        <Link to=\"reviews\" state={location.state}>\n          <LinkName>Reviews</LinkName>\n        </Link>\n      </LinkCover>\n\n      <Outlet />\n    </Cover>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=31142dc0aeacf38ab901f6c28fe4e845';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovie = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getDetailsMovie = async id => {\n  const res = await axios.get(`${BASE_URL}/movie/${id}?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.cast);\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n  // console.log(res.data.results);\n};\n\n// const genres = [\n//   {\n//     id: 28,\n//     name: 'Action',\n//   },\n//   {\n//     id: 12,\n//     name: 'Adventure',\n//   },\n//   {\n//     id: 16,\n//     name: 'Animation',\n//   },\n//   {\n//     id: 35,\n//     name: 'Comedy',\n//   },\n//   {\n//     id: 80,\n//     name: 'Crime',\n//   },\n//   {\n//     id: 99,\n//     name: 'Documentary',\n//   },\n//   {\n//     id: 18,\n//     name: 'Drama',\n//   },\n//   {\n//     id: 10751,\n//     name: 'Family',\n//   },\n//   {\n//     id: 14,\n//     name: 'Fantasy',\n//   },\n//   {\n//     id: 36,\n//     name: 'History',\n//   },\n//   {\n//     id: 27,\n//     name: 'Horror',\n//   },\n//   {\n//     id: 10402,\n//     name: 'Music',\n//   },\n//   {\n//     id: 9648,\n//     name: 'Mystery',\n//   },\n//   {\n//     id: 10749,\n//     name: 'Romance',\n//   },\n//   {\n//     id: 878,\n//     name: 'Science Fiction',\n//   },\n//   {\n//     id: 10770,\n//     name: 'TV Movie',\n//   },\n//   {\n//     id: 53,\n//     name: 'Thriller',\n//   },\n//   {\n//     id: 10752,\n//     name: 'War',\n//   },\n//   {\n//     id: 37,\n//     name: 'Western',\n//   },\n// ];\n\n// const main = document.getElementById('main');\n// const form = document.querySelector('.search__form');\n// const search = document.querySelector('.search__field');\n\n// const tagsEl = document.getElementById('tags');\n// let selectedGenre = [];\n// // setGenre();\n// // genresBtn.addEventListener('click', setGenre);\n\n// //*pagination parameters\n// // const prev = document.getElementById('prev')\n// // const next = document.getElementById('next')\n// // const current = document.getElementById('current')\n\n// // let  currentPage = 1;\n// // let  nextPage = 2;\n// // let  prevPage = 3;\n// // let  lastUrl = '';\n// // let  totalPages = 100;\n\n// function setGenre() {\n//   tagsEl.innerHTML = '';\n//   genres.forEach(genre => {\n//     //Для каждого жанра делаем div с классом 'tag'\n//     //Записываем туда имя жанра\n//     const t = document.createElement('div');\n//     t.classList.add('tag');\n//     t.id = genre.id;\n//     t.innerText = genre.name;\n//     tagsEl.append(t);\n//     // console.log(tagsEl);\n\n//     //по клику проверяем\n//     t.addEventListener('click', () => {\n//       //если выбранная картинка не имеет жанра,\n//       main.classList.add('sorted-main-container');\n//       if (selectedGenre.length == 0) {\n//         selectedGenre.push(genre.id);\n//       } else {\n//         //если выбранная картинка содержит жанр,\n//         // и что бы она не повторялась в списке\n\n//         if (selectedGenre.includes(genre.id)) {\n//           selectedGenre.forEach((id, idx) => {\n//             if (id == genre.id) {\n//               selectedGenre.splice(idx, 1);\n//             }\n//           });\n//         } else {\n//           //мы его туда добавляем\n//           selectedGenre.push(genre.id);\n//         }\n//       }\n//       // console.log(selectedGenre);\n//       getMovies(API_URL + '&with_genres=' + encodeURI(selectedGenre.join(',')));\n//       highlightSelection();\n//     });\n//     tagsEl.append(t);\n//   });\n// }\n\n// //функция которая сбрасывает все жанры одной кнопкой\n\n// function clearBtn() {\n//   //что-бы наша кнопка clear не дублировалась\n//   let clearBtn = document.getElementById('clear');\n//   if (clearBtn) {\n//     clearBtn.classList.add('highlight');\n//   } else {\n//     //формируем кнопку Clear\n//     let clear = document.createElement('div');\n//     clear.classList.add('tag', 'highlight', 'clear-btn');\n//     clear.id = 'clear';\n//     clear.innerText = 'Clear All';\n//     clear.addEventListener('click', () => {\n//       selectedGenre = [];\n//       setGenre();\n//       getMovies(API_URL);\n//     });\n//     tagsEl.append(clear);\n//   }\n// }\n\n// // renderMarkupMovieCard(API_URL);\n// // getMovies(API_URL);\n\n// function getMovies(url) {\n//   //получаем фильмы по URL из библиотеки\n\n//   // lastUrl = url;\n\n//   fetch(url)\n//     .then(res => res.json())\n//     .then(data => {\n//       // console.log(data.results)\n//       if (data.results.length !== 0) {\n//         showMovies(data.results);\n//         currentPage = data.page;\n//         nextPage = currentPage + 1;\n//         prevPage = currentPage - 1;\n//         totalPages = data.total_pages;\n\n//         // current.innerText = currentPage;\n\n//         // if(currentPage <= 1){\n//         //   prev.classList.add('disabled');\n//         //   next.classList.remove('disabled')\n//         // }else if(currentPage>= totalPages){\n//         //   prev.classList.remove('disabled');\n//         //   next.classList.add('disabled')\n//         // }else{\n//         //   prev.classList.remove('disabled');\n//         //   next.classList.remove('disabled')\n//         // }\n\n//         tagsEl.scrollIntoView({ behavior: 'smooth' });\n//       } else {\n//         main.innerHTML = `<div class=\"container library-container noMovies\"><h1 class=\"title-queue\">There are no movies, try other genres</h1></div>`;\n//       }\n//     });\n// }\n\n// function showMovies(data) {\n//   main.innerHTML = '';\n\n//   data.forEach(movie => {\n//     //создаем раскладку с картинками\n//     const {\n//       title,\n//       poster_path,\n//       vote_average,\n//       release_date,\n//       overview,\n//       id,\n//       genre_ids,\n//     } = movie;\n//     // { id, poster_path, genre_ids, title, release_date, vote_average }\n//     const movieEl = document.createElement('div');\n//     movieEl.classList.add('movie');\n\n//     //template for each picture\n//     movieEl.innerHTML = `\n\n//     <li>\n\n//       <div class=\"movie-card\" id=\"${id}\">\n//       <div class=\"movie-card__poster-container\"> ${\n//         poster_path\n//            `<img src=\"https://image.tmdb.org/t/p/w300${poster_path}\"`\n//           : `<img src=\"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"`\n//       }\n//               class=\"movie-card__poster\"\n//               alt=\"${title}\"\n//               loading=\"lazy\"\n//           /></div>\n\n//           <div class=\"movie-info\">\n\n//              <h2 class=\"movie-info-title\"> ${title}</h2>\n//               <span class=\" movie-info-rating ${getColor(\n//                 vote_average\n//               )}\">${vote_average}</span>\n//           </div>\n\n//     </div>\n// </li>\n\n//       `;\n\n//     main.appendChild(movieEl);\n\n//     document.getElementById(id).addEventListener('click', () => {\n//       console.log(id);\n//       openNav(movie);\n//     });\n//   });\n// }\n\n// function getColor(vote) {\n//   if (vote >= 8) {\n//     return 'green';\n//   } else if (vote >= 5) {\n//     return 'orange';\n//   } else {\n//     return 'red';\n//   }\n// }\n\n// form.addEventListener('submit', e => {\n//   e.preventDefault();\n\n//   const searchTerm = search.value;\n//   selectedGenre = [];\n//   setGenre();\n//   if (searchTerm) {\n//     getMovies(searchURL + '&query=' + searchTerm);\n//   } else {\n//     getMovies(API_URL);\n//   }\n// });\n\n// //функция, которая задает цвета для наших фильтров\n\n// function highlightSelection() {\n//   const tags = document.querySelectorAll('.tag');\n//   tags.forEach(tag => {\n//     tag.classList.remove('highlight');\n//   });\n//   clearBtn();\n//   //проверяем есть ли в жанрах что-то\n//   if (selectedGenre.length != 0) {\n//     selectedGenre.forEach(id => {\n//       const hightlightedTag = document.getElementById(id);\n//       hightlightedTag.classList.add('highlight');\n//     });\n//   }\n// }\n\n// const genresBtn = document.querySelector('.dropdown-genres-btn');\n// // const genresList = document.querySelector('.dropdown-content');\n// genresBtn.addEventListener('click', myFunction);\n\n// function myFunction() {\n//   document.getElementById('tags').classList.toggle('show');\n// }\n// document.onclick = function (event) {\n//   if (!event.target.matches('.dropdown-toggle')) {\n//     const dropdowns = document.getElementsByClassName('dropdown-menu');\n//     let i = 0;\n//     for (i = 0; i < dropdowns.length; i++) {\n//       const openDropdown = dropdowns[i];\n//       if (openDropdown.classList.contains('show')) {\n//         openDropdown.classList.remove('show');\n//       }\n//     }\n//   }\n// };\n\n// //*pagination\n\n// // prev.addEventListener('click', () => {\n// //   if(prevPage > 0){\n// //     pageCall(prevPage);\n// //   }\n// // })\n\n// // next.addEventListener('click', () => {\n// //   if(nextPage <= totalPages){\n// //     pageCall(nextPage);\n// //   }\n// // })\n\n// // function pageCall(page){\n// //   let urlSplit = lastUrl.split('?');\n// //   let queryParams = urlSplit[1].split('&');\n// //   let key = queryParams[queryParams.length -1].split('=');\n\n// // if(key[0] != 'page'){\n// //     let url = lastUrl + '&page='+page\n// //     fetchPopularMovies(url);\n// //   }else{\n// //     key[1] = page.toString();\n// //     let a = key.join('=');\n// //     queryParams[queryParams.length -1] = a;\n// //     let b = queryParams.join('&');\n// //     let url = urlSplit[0] +'?'+ b\n// //     fetchPopularMovies(url);\n// //   }\n// // }\n"],"names":["Img","styled","InfCover","CardCover","Cover","Button","Title","Item","ButCover","LinkName","LinkCover","movieId","useParams","navigate","useNavigate","location","useLocation","useState","movieDetails","setMovieDetails","useEffect","getDetailsMovie","then","catch","message","console","log","title","poster_path","vote_average","release_date","overview","genres","type","onClick","state","from","src","alt","width","height","toFixed","map","genre","name","join","to","API_KEY","BASE_URL","getTrendingMovie","axios","res","data","id","getMoviesByQuery","query","results","getActors","cast","getReviews"],"sourceRoot":""}