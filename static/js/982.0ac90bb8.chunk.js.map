{"version":3,"file":"static/js/982.0ac90bb8.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","pages/Search/Search.styled.js","pages/Search/Search.js","services/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-content: center;\n  align-items: stretch;\n  grid-gap: 20px;\n`;\n\nexport const Img = styled.img`\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 7px 8px -5px rgba(0, 0, 0, 0.2),\n      0px 8px 9px 0px rgba(0, 0, 0, 0.14), 0px 5px 15px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Cover = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  link-decoration: none;\n  text-decoration: none;\n`;\nexport const Title = styled.h2`\n  padding: 10px;\n  font-size: 18px;\n  line-height: 1.56;\n  color: #182446f2;\n\n  text-align: center;\n  justify-content: center;\n  align-content: center;\n  vertical-align: middle;\n  width: 280px;\n  height: 50px;\n  background-color: rgb(170 161 140 / 24%);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    color: #ad3737;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from 'images/Posters/noPoster.jpeg';\nimport { Cover, List, Title, Img } from './MovieList.styled';\n\nexport const TrendingMoviesList = ({ trendingMovies }) => {\n  // setIsLoading(true);\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {trendingMovies.map(({ id, poster_path, title, name }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Cover>\n                {poster_path ? (\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={title}\n                    width=\"300\"\n                    height=\"400\"\n                  />\n                ) : (\n                  <img src={noPoster} alt={title} width=\"300\" height=\"400\" />\n                )}\n                <Title>{title || name}</Title>\n              </Cover>\n            </Link>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\nList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Cover = styled.div`\n   {\n    padding: 25px;\n  }\n`;\n\nexport const Form = styled.form`\n   {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  color: #fff;\n  font-size: 16px;\n  padding: 11px 17px;\n  border: none;\n  background-color: #8e6f6f;\n  transition: all 0.2s ease-in;\n\n  float: left; /* IE 9 Fix */\n  &:hover,\n  &:focus {\n    background-color: #7e5a5a;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: inline-block;\n  color: #fff;\n  font-size: 16px;\n  text-transform: uppercase;\n  padding: 11px 20px;\n  border: none;\n  margin-left: -1px;\n  background-color: #c0392b;\n  float: left; /* IE 9 Fix */\n  transition: all 0.2s ease-in;\n  &:hover {\n    background-color: #6e0e0e;\n  }\n`;\n\nexport const TrendCover = styled.div`\n   {\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { toast } from 'react-toastify';\nimport { getMoviesByQuery } from 'services/Api/Api';\nimport { TrendingMoviesList } from 'components/MoviesList/MoviesList';\n\n// import { Box } from 'components/Box';\nimport { Form, Input, Button, Cover, TrendCover } from './Search.styled';\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n\n  const onChangeInput = e => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n\n    if (query.trim() === '') {\n      alert('Please, enter some picture name!');\n\n      // toast.error(\"Please, enter some picture's name!\");\n    }\n  };\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      return;\n    }\n    getMoviesByQuery(searchQuery).then(setMoviesByQuery);\n  }, [searchParams]);\n  return (\n    <Cover>\n      <Form onSubmit={onSubmitForm}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Input movie name\"\n          value={query}\n          onChange={onChangeInput}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <TrendCover>\n        <TrendingMoviesList trendingMovies={moviesByQuery} />\n      </TrendCover>\n    </Cover>\n  );\n};\n\nCover.propTypes = {\n  moviesByQuery: PropTypes.func.isRequired,\n};\nexport default Search;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=31142dc0aeacf38ab901f6c28fe4e845';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovie = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getDetailsMovie = async id => {\n  const res = await axios.get(`${BASE_URL}/movie/${id}?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.cast);\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n  // console.log(res.data.results);\n};\n"],"names":["List","styled","Img","Cover","Title","TrendingMoviesList","trendingMovies","location","useLocation","map","id","poster_path","title","name","to","state","from","src","alt","width","height","noPoster","propTypes","PropTypes","Form","Input","Button","TrendCover","moviesByQuery","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMoviesByQuery","useEffect","searchQuery","get","getMoviesByQuery","then","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","API_KEY","BASE_URL","getTrendingMovie","axios","res","data","getDetailsMovie","results","getActors","movieId","cast","getReviews"],"sourceRoot":""}