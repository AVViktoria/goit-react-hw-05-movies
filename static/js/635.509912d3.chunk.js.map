{"version":3,"file":"static/js/635.509912d3.chunk.js","mappings":"uPAEaA,EAAOC,EAAAA,GAAAA,GAAH,4JAQJC,EAAMD,EAAAA,GAAAA,IAAH,uYAYHE,EAAQF,EAAAA,GAAAA,IAAH,iJAOLG,EAAQH,EAAAA,GAAAA,GAAH,yd,SCvBLI,EAAqB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAE7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACR,EAAD,UACGM,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,UACE,UAACJ,EAAD,WACGQ,GACC,SAACT,EAAD,CACEe,IAAG,yCAAoCN,GACvCO,IAAKN,EACLO,MAAM,MACNC,OAAO,SAGT,gBAAKH,IAAKI,EAAUH,IAAKN,EAAOO,MAAM,MAAMC,OAAO,SAErD,SAAChB,EAAD,UAAQQ,GAASC,UAbdH,EADS,OAsB3B,EACDV,EAAKsB,UAAY,CACfhB,eAAgBiB,IAAAA,QACdA,IAAAA,MAAgB,CACdb,GAAIa,IAAAA,OAAAA,WACJX,MAAOW,IAAAA,OAAAA,WACPV,KAAMU,IAAAA,U,0HCvCCpB,E,QAAQF,GAAAA,IAAH,sF,4BC6BlBE,EAAMmB,UAAY,CAChBhB,eAAgBiB,IAAAA,KAAAA,YAGlB,MA7BuB,WACrB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOlB,EAAP,KAAuBmB,EAAvB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJJ,EAAkBI,EAAIC,SACtBC,QAAQC,IAAIH,EAAIC,QACjB,IACAG,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRH,QAAQC,IAAIE,EACb,GACJ,GAAE,IACE5B,GAIH,+BACE,SAACH,EAAD,WACE,SAAC,IAAD,CAAoBG,eAAgBA,SALjC,2CASV,C,mMC3BK6B,EAAU,2CACVC,EAAW,+BAEJT,EAAgB,mCAAG,oGACZU,EAAAA,GAAAA,IAAA,UAAaD,EAAb,+BAA4CD,IADhC,cACxBN,EADwB,yBAEvBA,EAAIS,MAFmB,2CAAH,qDAMhBC,EAAe,mCAAG,WAAM7B,GAAN,uFACX2B,EAAAA,GAAAA,IAAA,UAAaD,EAAb,kBAA+B1B,EAA/B,YAAqCyB,IAD1B,cACvBN,EADuB,yBAEtBA,EAAIS,MAFkB,2CAAH,sDAMfE,EAAgB,mCAAG,WAAMC,GAAN,uFACZJ,EAAAA,GAAAA,IAAA,UACbD,EADa,yBACYD,EADZ,kBAC6BM,EAD7B,+CADY,cACxBZ,EADwB,yBAIvBA,EAAIS,KAAKR,SAJc,2CAAH,sDAOhBY,EAAS,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,GAAAA,IAAA,UACbD,EADa,kBACKO,EADL,oBACwBR,EADxB,oBADK,cACjBN,EADiB,yBAKhBA,EAAIS,KAAKM,MALO,2CAAH,sDAQTC,EAAU,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,GAAAA,IAAA,UACbD,EADa,kBACKO,EADL,oBACwBR,EADxB,2BADM,cAClBN,EADkB,yBAIjBA,EAAIS,KAAKR,SAJQ,2CAAH,qD","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","pages/HomeMovies/HomeMovies.styled.js","pages/HomeMovies/HomeMovies.js","services/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-content: center;\n  align-items: stretch;\n  grid-gap: 20px;\n`;\n\nexport const Img = styled.img`\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 7px 8px -5px rgba(0, 0, 0, 0.2),\n      0px 8px 9px 0px rgba(0, 0, 0, 0.14), 0px 5px 15px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Cover = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  link-decoration: none;\n  text-decoration: none;\n`;\nexport const Title = styled.h2`\n  padding: 10px;\n  font-size: 18px;\n  line-height: 1.56;\n  color: #182446f2;\n\n  text-align: center;\n  justify-content: center;\n  align-content: center;\n  vertical-align: middle;\n  width: 280px;\n  height: 50px;\n  background-color: rgb(170 161 140 / 24%);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    color: #ad3737;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from 'images/Posters/noPoster.jpeg';\nimport { Cover, List, Title, Img } from './MovieList.styled';\n\nexport const TrendingMoviesList = ({ trendingMovies }) => {\n  // setIsLoading(true);\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {trendingMovies.map(({ id, poster_path, title, name }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Cover>\n                {poster_path ? (\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={title}\n                    width=\"300\"\n                    height=\"400\"\n                  />\n                ) : (\n                  <img src={noPoster} alt={title} width=\"300\" height=\"400\" />\n                )}\n                <Title>{title || name}</Title>\n              </Cover>\n            </Link>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\nList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Cover = styled.div`\n   {\n    padding-top: 30px;\n    padding-bottom: 10px;\n  }\n`;\n","import { getTrendingMovie } from '../../services/Api/Api';\nimport { useState, useEffect } from 'react';\nimport { TrendingMoviesList } from 'components/MoviesList/MoviesList';\nimport { Cover } from './HomeMovies.styled';\nimport PropTypes from 'prop-types';\n\nconst TrendingMovies = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovie()\n      .then(res => {\n        setTrendingMovies(res.results);\n        console.log(res.results);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, []);\n  if (!trendingMovies) {\n    return <p>Sorry, not found</p>;\n  }\n  return (\n    <>\n      <Cover>\n        <TrendingMoviesList trendingMovies={trendingMovies} />\n      </Cover>\n    </>\n  );\n};\n\nCover.propTypes = {\n  trendingMovies: PropTypes.func.isRequired,\n};\n\nexport default TrendingMovies;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=31142dc0aeacf38ab901f6c28fe4e845';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovie = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getDetailsMovie = async id => {\n  const res = await axios.get(`${BASE_URL}/movie/${id}?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.cast);\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n  // console.log(res.data.results);\n};\n"],"names":["List","styled","Img","Cover","Title","TrendingMoviesList","trendingMovies","location","useLocation","map","id","poster_path","title","name","to","state","from","src","alt","width","height","noPoster","propTypes","PropTypes","useState","setTrendingMovies","useEffect","getTrendingMovie","then","res","results","console","log","catch","message","API_KEY","BASE_URL","axios","data","getDetailsMovie","getMoviesByQuery","query","getActors","movieId","cast","getReviews"],"sourceRoot":""}