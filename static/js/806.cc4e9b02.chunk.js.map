{"version":3,"file":"static/js/806.cc4e9b02.chunk.js","mappings":"mRAEaA,EAAQC,EAAAA,GAAAA,IAAH,8DAcLC,EAAOD,EAAAA,GAAAA,GAAH,8G,SCXJE,EAAU,WACrB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,KAAKL,GACLM,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACN,IACwB,IAAxBF,EAAaW,QACR,2CAIP,SAAChB,EAAD,UACGK,EAAaY,KAAI,SAAAC,GAChB,OACE,UAAChB,EAAD,YACE,0BAAKgB,EAAEC,OAAP,SACA,uBAAID,EAAEE,YAFGF,EAAEG,GAKhB,KAGN,EACD,G,mMC/BMC,EAAU,2CACVC,EAAW,+BAEJC,EAAgB,mCAAG,oGACZC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,+BAA4CD,IADhC,cACxBI,EADwB,yBAEvBA,EAAIC,MAFmB,2CAAH,qDAMhBC,EAAe,mCAAG,WAAMP,GAAN,uFACXI,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAAqCC,IAD1B,cACvBI,EADuB,yBAEtBA,EAAIC,MAFkB,2CAAH,sDAMfE,EAAgB,mCAAG,WAAMC,GAAN,uFACZL,EAAAA,GAAAA,IAAA,UACbF,EADa,yBACYD,EADZ,kBAC6BQ,EAD7B,+CADY,cACxBJ,EADwB,yBAIvBA,EAAIC,KAAKI,SAJc,2CAAH,sDAOhBC,EAAS,mCAAG,WAAMzB,GAAN,uFACLkB,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKhB,EADL,oBACwBe,EADxB,oBADK,cACjBI,EADiB,yBAKhBA,EAAIC,KAAKM,MALO,2CAAH,sDAQTvB,EAAU,mCAAG,WAAMH,GAAN,uFACNkB,EAAAA,GAAAA,IAAA,UACbF,EADa,kBACKhB,EADL,oBACwBe,EADxB,2BADM,cAClBI,EADkB,yBAIjBA,EAAIC,KAAKI,SAJQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Cover = styled.div`\n   {\n    padding: 20px;\n    }\n  }\n`;\n// align-items: center;\n//     justify-content: center;\n// export const Cover = styled.div`\n//    {\n//     //\n//     }\n//   }\n// `;\nexport const List = styled.li`\n   {\n    list-style: none;\n    margin-bottom: 30px;\n    weight: auto;\n    }\n  }\n`;\n// export const Cover = styled.div`\n//    {\n//     //\n//     }\n//   }\n// `;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'services/Api/Api';\nimport { Cover, List } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n  // console.log(movieReviews);\n  useEffect(() => {\n    getReviews(movieId)\n      .then(setMovieReviews)\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [movieId]);\n  if (movieReviews.length === 0) {\n    return <h3>No reviews...</h3>;\n  }\n\n  return (\n    <Cover>\n      {movieReviews.map(e => {\n        return (\n          <List key={e.id}>\n            <h3>{e.author} :</h3>\n            <p>{e.content}</p>\n          </List>\n        );\n      })}\n    </Cover>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=31142dc0aeacf38ab901f6c28fe4e845';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovie = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getDetailsMovie = async id => {\n  const res = await axios.get(`${BASE_URL}/movie/${id}?${API_KEY}`);\n  return res.data;\n  // console.log(res.data.results);\n};\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.cast);\n  return res.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n  // console.log(res.data.results);\n};\n\n// const genres = [\n//   {\n//     id: 28,\n//     name: 'Action',\n//   },\n//   {\n//     id: 12,\n//     name: 'Adventure',\n//   },\n//   {\n//     id: 16,\n//     name: 'Animation',\n//   },\n//   {\n//     id: 35,\n//     name: 'Comedy',\n//   },\n//   {\n//     id: 80,\n//     name: 'Crime',\n//   },\n//   {\n//     id: 99,\n//     name: 'Documentary',\n//   },\n//   {\n//     id: 18,\n//     name: 'Drama',\n//   },\n//   {\n//     id: 10751,\n//     name: 'Family',\n//   },\n//   {\n//     id: 14,\n//     name: 'Fantasy',\n//   },\n//   {\n//     id: 36,\n//     name: 'History',\n//   },\n//   {\n//     id: 27,\n//     name: 'Horror',\n//   },\n//   {\n//     id: 10402,\n//     name: 'Music',\n//   },\n//   {\n//     id: 9648,\n//     name: 'Mystery',\n//   },\n//   {\n//     id: 10749,\n//     name: 'Romance',\n//   },\n//   {\n//     id: 878,\n//     name: 'Science Fiction',\n//   },\n//   {\n//     id: 10770,\n//     name: 'TV Movie',\n//   },\n//   {\n//     id: 53,\n//     name: 'Thriller',\n//   },\n//   {\n//     id: 10752,\n//     name: 'War',\n//   },\n//   {\n//     id: 37,\n//     name: 'Western',\n//   },\n// ];\n\n// const main = document.getElementById('main');\n// const form = document.querySelector('.search__form');\n// const search = document.querySelector('.search__field');\n\n// const tagsEl = document.getElementById('tags');\n// let selectedGenre = [];\n// // setGenre();\n// // genresBtn.addEventListener('click', setGenre);\n\n// //*pagination parameters\n// // const prev = document.getElementById('prev')\n// // const next = document.getElementById('next')\n// // const current = document.getElementById('current')\n\n// // let  currentPage = 1;\n// // let  nextPage = 2;\n// // let  prevPage = 3;\n// // let  lastUrl = '';\n// // let  totalPages = 100;\n\n// function setGenre() {\n//   tagsEl.innerHTML = '';\n//   genres.forEach(genre => {\n//     //Для каждого жанра делаем div с классом 'tag'\n//     //Записываем туда имя жанра\n//     const t = document.createElement('div');\n//     t.classList.add('tag');\n//     t.id = genre.id;\n//     t.innerText = genre.name;\n//     tagsEl.append(t);\n//     // console.log(tagsEl);\n\n//     //по клику проверяем\n//     t.addEventListener('click', () => {\n//       //если выбранная картинка не имеет жанра,\n//       main.classList.add('sorted-main-container');\n//       if (selectedGenre.length == 0) {\n//         selectedGenre.push(genre.id);\n//       } else {\n//         //если выбранная картинка содержит жанр,\n//         // и что бы она не повторялась в списке\n\n//         if (selectedGenre.includes(genre.id)) {\n//           selectedGenre.forEach((id, idx) => {\n//             if (id == genre.id) {\n//               selectedGenre.splice(idx, 1);\n//             }\n//           });\n//         } else {\n//           //мы его туда добавляем\n//           selectedGenre.push(genre.id);\n//         }\n//       }\n//       // console.log(selectedGenre);\n//       getMovies(API_URL + '&with_genres=' + encodeURI(selectedGenre.join(',')));\n//       highlightSelection();\n//     });\n//     tagsEl.append(t);\n//   });\n// }\n\n// //функция которая сбрасывает все жанры одной кнопкой\n\n// function clearBtn() {\n//   //что-бы наша кнопка clear не дублировалась\n//   let clearBtn = document.getElementById('clear');\n//   if (clearBtn) {\n//     clearBtn.classList.add('highlight');\n//   } else {\n//     //формируем кнопку Clear\n//     let clear = document.createElement('div');\n//     clear.classList.add('tag', 'highlight', 'clear-btn');\n//     clear.id = 'clear';\n//     clear.innerText = 'Clear All';\n//     clear.addEventListener('click', () => {\n//       selectedGenre = [];\n//       setGenre();\n//       getMovies(API_URL);\n//     });\n//     tagsEl.append(clear);\n//   }\n// }\n\n// // renderMarkupMovieCard(API_URL);\n// // getMovies(API_URL);\n\n// function getMovies(url) {\n//   //получаем фильмы по URL из библиотеки\n\n//   // lastUrl = url;\n\n//   fetch(url)\n//     .then(res => res.json())\n//     .then(data => {\n//       // console.log(data.results)\n//       if (data.results.length !== 0) {\n//         showMovies(data.results);\n//         currentPage = data.page;\n//         nextPage = currentPage + 1;\n//         prevPage = currentPage - 1;\n//         totalPages = data.total_pages;\n\n//         // current.innerText = currentPage;\n\n//         // if(currentPage <= 1){\n//         //   prev.classList.add('disabled');\n//         //   next.classList.remove('disabled')\n//         // }else if(currentPage>= totalPages){\n//         //   prev.classList.remove('disabled');\n//         //   next.classList.add('disabled')\n//         // }else{\n//         //   prev.classList.remove('disabled');\n//         //   next.classList.remove('disabled')\n//         // }\n\n//         tagsEl.scrollIntoView({ behavior: 'smooth' });\n//       } else {\n//         main.innerHTML = `<div class=\"container library-container noMovies\"><h1 class=\"title-queue\">There are no movies, try other genres</h1></div>`;\n//       }\n//     });\n// }\n\n// function showMovies(data) {\n//   main.innerHTML = '';\n\n//   data.forEach(movie => {\n//     //создаем раскладку с картинками\n//     const {\n//       title,\n//       poster_path,\n//       vote_average,\n//       release_date,\n//       overview,\n//       id,\n//       genre_ids,\n//     } = movie;\n//     // { id, poster_path, genre_ids, title, release_date, vote_average }\n//     const movieEl = document.createElement('div');\n//     movieEl.classList.add('movie');\n\n//     //template for each picture\n//     movieEl.innerHTML = `\n\n//     <li>\n\n//       <div class=\"movie-card\" id=\"${id}\">\n//       <div class=\"movie-card__poster-container\"> ${\n//         poster_path\n//            `<img src=\"https://image.tmdb.org/t/p/w300${poster_path}\"`\n//           : `<img src=\"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"`\n//       }\n//               class=\"movie-card__poster\"\n//               alt=\"${title}\"\n//               loading=\"lazy\"\n//           /></div>\n\n//           <div class=\"movie-info\">\n\n//              <h2 class=\"movie-info-title\"> ${title}</h2>\n//               <span class=\" movie-info-rating ${getColor(\n//                 vote_average\n//               )}\">${vote_average}</span>\n//           </div>\n\n//     </div>\n// </li>\n\n//       `;\n\n//     main.appendChild(movieEl);\n\n//     document.getElementById(id).addEventListener('click', () => {\n//       console.log(id);\n//       openNav(movie);\n//     });\n//   });\n// }\n\n// function getColor(vote) {\n//   if (vote >= 8) {\n//     return 'green';\n//   } else if (vote >= 5) {\n//     return 'orange';\n//   } else {\n//     return 'red';\n//   }\n// }\n\n// form.addEventListener('submit', e => {\n//   e.preventDefault();\n\n//   const searchTerm = search.value;\n//   selectedGenre = [];\n//   setGenre();\n//   if (searchTerm) {\n//     getMovies(searchURL + '&query=' + searchTerm);\n//   } else {\n//     getMovies(API_URL);\n//   }\n// });\n\n// //функция, которая задает цвета для наших фильтров\n\n// function highlightSelection() {\n//   const tags = document.querySelectorAll('.tag');\n//   tags.forEach(tag => {\n//     tag.classList.remove('highlight');\n//   });\n//   clearBtn();\n//   //проверяем есть ли в жанрах что-то\n//   if (selectedGenre.length != 0) {\n//     selectedGenre.forEach(id => {\n//       const hightlightedTag = document.getElementById(id);\n//       hightlightedTag.classList.add('highlight');\n//     });\n//   }\n// }\n\n// const genresBtn = document.querySelector('.dropdown-genres-btn');\n// // const genresList = document.querySelector('.dropdown-content');\n// genresBtn.addEventListener('click', myFunction);\n\n// function myFunction() {\n//   document.getElementById('tags').classList.toggle('show');\n// }\n// document.onclick = function (event) {\n//   if (!event.target.matches('.dropdown-toggle')) {\n//     const dropdowns = document.getElementsByClassName('dropdown-menu');\n//     let i = 0;\n//     for (i = 0; i < dropdowns.length; i++) {\n//       const openDropdown = dropdowns[i];\n//       if (openDropdown.classList.contains('show')) {\n//         openDropdown.classList.remove('show');\n//       }\n//     }\n//   }\n// };\n\n// //*pagination\n\n// // prev.addEventListener('click', () => {\n// //   if(prevPage > 0){\n// //     pageCall(prevPage);\n// //   }\n// // })\n\n// // next.addEventListener('click', () => {\n// //   if(nextPage <= totalPages){\n// //     pageCall(nextPage);\n// //   }\n// // })\n\n// // function pageCall(page){\n// //   let urlSplit = lastUrl.split('?');\n// //   let queryParams = urlSplit[1].split('&');\n// //   let key = queryParams[queryParams.length -1].split('=');\n\n// // if(key[0] != 'page'){\n// //     let url = lastUrl + '&page='+page\n// //     fetchPopularMovies(url);\n// //   }else{\n// //     key[1] = page.toString();\n// //     let a = key.join('=');\n// //     queryParams[queryParams.length -1] = a;\n// //     let b = queryParams.join('&');\n// //     let url = urlSplit[0] +'?'+ b\n// //     fetchPopularMovies(url);\n// //   }\n// // }\n"],"names":["Cover","styled","List","Reviews","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getReviews","then","catch","message","console","log","length","map","e","author","content","id","API_KEY","BASE_URL","getTrendingMovie","axios","res","data","getDetailsMovie","getMoviesByQuery","query","results","getActors","cast"],"sourceRoot":""}